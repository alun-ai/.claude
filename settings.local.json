{
  "permissions": {
    "allow": [
      "find",
      "grep",
      "rg",
      "ls",
      "mkdir",
      "cp",
      "mv",
      "rm",
      "touch",
      "cat",
      "chmod",
      "sed",
      "awk",
      "test",
      "which",
      "command",
      "env",
      "source",
      "timeout",
      "curl",

      "git add",
      "git commit",
      "git push",
      "git pull",
      "git reset",
      "git tag",
      "git clone",
      "git submodule",
      "git branch",
      "git checkout",
      "git merge",
      "git rebase",
      "git stash",
      "git log",
      "git diff",
      "git status",

      "npm install",
      "npm run",
      "npm test",
      "npm view",
      "npm search",
      "npm ls",
      "npx",
      "node",
      "yarn",
      "pnpm",

      "python3",
      "pip",
      "poetry",

      "cargo",
      "rustc",

      "go",

      "docker",

      "nix-shell",
      "nix",
      "nix-instantiate",
      "nix-env",
      "direnv",

      "claude-cmd",
      "claude-security-scan",
      "claude-test",
      "claude-monitor",
      "claude-incremental",
      "cache-init",
      "cache-status",
      "cache-clean",
      "security",
      "dashboard",
      "workflow",
      "smart",
      "monitor",
      "inc-status",
      "build",
      "test",
      "lint",

      "hyperfine",
      "time",
      "htop",
      "ps",
      "top",

      "trivy",
      "semgrep",
      "safety",
      "bandit",
      "gosec",

      "jq",
      "yq",
      "bc",
      "sqlite3",

      "psql",
      "supabase",
      "vercel",
      "bash",

      "pkill",
      "kill",
      "killall",

      "asdf",

      "tsc",
      "tsx",
      "next",

      "mcp__filesystem__search_files",
      "mcp__filesystem__list_directory",
      "mcp__filesystem__read_file",
      "mcp__filesystem__write_file",
      "mcp__filesystem__create_directory",
      "mcp__filesystem__edit_file",
      "mcp__filesystem__read_multiple_files",
      "mcp__filesystem__directory_tree",
      "mcp__filesystem__move_file",
      "mcp__filesystem__get_file_info",
      "mcp__filesystem__list_allowed_directories",

      "mcp__ide__getDiagnostics",

      "mcp__memory__create_entities",
      "mcp__memory__create_relations",
      "mcp__memory__add_observations",
      "mcp__memory__delete_entities",
      "mcp__memory__delete_observations",
      "mcp__memory__delete_relations",
      "mcp__memory__read_graph",
      "mcp__memory__search_nodes",
      "mcp__memory__open_nodes",

      "WebFetch(domain:github.com)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:nixos.org)",
      "WebFetch(domain:nix.dev)"
    ],
    "deny": [
      "rm -rf /",
      "sudo",
      "su",
      "chown",
      "chmod 777",
      "nc",
      "netcat",
      "telnet",
      "mount",
      "umount",
      "fdisk",
      "mkfs"
    ]
  },

  "environment": {
    "CLAUDE_CODE_SHARED_CONFIG": "true",
    "CLAUDE_CODE_CONFIG_PATH": "../.claude",
    "CLAUDE_CODE_NIX_PATH": "../.claude/nix",
    "CLAUDE_CODE_AUTO_DETECT": "true",
    "CLAUDE_CODE_PERFORMANCE_MODE": "true",
    "CLAUDE_CODE_SECURITY_ENABLED": "true",
    "CLAUDE_CODE_METRICS_ENABLED": "true"
  },

  "hooks": {
    "pre_command": [
      "export CLAUDE_CODE_PROJECT_TYPE=$(detect_project_type)",
      "if [[ -f '../.claude/nix/default.nix' && -z '$NIX_SHELL_PACKAGES' ]]; then",
      "  echo 'Nix environment available. Run: nix-shell ../.claude/nix/'",
      "fi"
    ],
    "post_command": [
      "if command -v claude-cmd >/dev/null 2>&1; then",
      "  claude-cmd learn \"$(basename $(pwd))\" \"$LAST_COMMAND\" \"$?\"",
      "fi"
    ]
  },

  "aliases": {
    "nix-env": "nix-shell ../.claude/nix/",
    "shared-help": "/m-help",
    "help": "/m-help",
    "project-init": "/m-project-init",
    "setup-nix": "/m-nix-setup",
    "security-scan": "/m-security-scan",
    "orchestrated-dev": "/m-orchestrated-dev",
    "commit-push": "/m-commit-push",
    "bug-fix": "/m-bug-fix",
    "test-generation": "/m-test-generation",
    "review-code": "/m-review-code",
    "task-planner": "/m-task-planner",
    "tdd-planner": "/m-tdd-planner",
    "next-task": "/m-next-task",
    "next-context": "/m-next-context",
    "project-cleanup": "/m-project-cleanup",
    "document-update": "/m-document-update",
    "branch-prune": "/m-branch-prune",
    "branch-prune-lite": "/m-branch-prune-lite",
    "debate-architecture": "/m-debate-architecture",
    "debate-code": "/m-debate-code",
    "dashboard": "claude-cmd dashboard",
    "security": "claude-security-scan",
    "cache-status": "cache-status",
    "monitor": "claude-monitor"
  },

  "commands": {
    "/m-help": "/Users/chadupton/Documents/Github/.claude/commands/m-help.md",
    "/m-project-init": "/Users/chadupton/Documents/Github/.claude/commands/m-project-init.md",
    "/m-nix-setup": "/Users/chadupton/Documents/Github/.claude/commands/m-nix-setup.md",
    "/m-security-scan": "/Users/chadupton/Documents/Github/.claude/commands/m-security-scan.md",
    "/m-orchestrated-dev": "/Users/chadupton/Documents/Github/.claude/commands/m-orchestrated-dev.md",
    "/m-commit-push": "/Users/chadupton/Documents/Github/.claude/commands/m-commit-push.md",
    "/m-bug-fix": "/Users/chadupton/Documents/Github/.claude/commands/m-bug-fix.md",
    "/m-test-generation": "/Users/chadupton/Documents/Github/.claude/commands/m-test-generation.md",
    "/m-review-code": "/Users/chadupton/Documents/Github/.claude/commands/m-review-code.md",
    "/m-task-planner": "/Users/chadupton/Documents/Github/.claude/commands/m-task-planner.md",
    "/m-tdd-planner": "/Users/chadupton/Documents/Github/.claude/commands/m-tdd-planner.md",
    "/m-next-task": "/Users/chadupton/Documents/Github/.claude/commands/m-next-task.md",
    "/m-next-context": "/Users/chadupton/Documents/Github/.claude/commands/m-next-context.md",
    "/m-project-cleanup": "/Users/chadupton/Documents/Github/.claude/commands/m-project-cleanup.md",
    "/m-document-update": "/Users/chadupton/Documents/Github/.claude/commands/m-document-update.md",
    "/m-branch-prune": "/Users/chadupton/Documents/Github/.claude/commands/m-branch-prune.md",
    "/m-branch-prune-lite": "/Users/chadupton/Documents/Github/.claude/commands/m-branch-prune-lite.md",
    "/m-debate-architecture": "/Users/chadupton/Documents/Github/.claude/commands/m-debate-architecture.md",
    "/m-debate-code": "/Users/chadupton/Documents/Github/.claude/commands/m-debate-code.md"
  }
}